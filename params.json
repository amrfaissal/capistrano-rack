{
  "name": "capistrano-rack",
  "tagline": "Capistrano recipe to be served with Rackspace",
  "body": "## capistrano-rack\r\n\r\n![](https://raw.githubusercontent.com/amrfaissal/capistrano-rack/gh-pages/images/CapistranoLogo.png)\r\n\r\nCapistrano recipe to be served with Rackspace.\r\n\r\n[![Build Status](https://travis-ci.org/amrfaissal/capistrano-rack.svg?branch=master)](https://travis-ci.org/amrfaissal/capistrano-rack) [![Dependency Status](https://gemnasium.com/amrfaissal/capistrano-rack.svg)](https://gemnasium.com/amrfaissal/capistrano-rack) [![Gem Version](https://badge.fury.io/rb/capistrano-rack.svg)](https://badge.fury.io/rb/capistrano-rack) [![ghit.me](https://ghit.me/badge.svg?repo=amrfaissal/capistrano-rack)](https://ghit.me/repo/amrfaissal/capistrano-rack) ![](http://ruby-gem-downloads-badge.herokuapp.com/capistrano-rack?type=total)\r\n\r\n---\r\n\r\n`capistrano-rack` simplifies your deployment to Rackspace Cloud services by connecting you to the appropriate service matching your criteria.\r\n\r\n## Installation\r\n\r\nAdd this line to your `Gemfile`:\r\n\r\n```ruby\r\n    gem 'capistrano-rack'\r\n```\r\n\r\nand in your `Capfile`:\r\n\r\n```ruby\r\n    require 'capistrano/rack'\r\n```\r\n\r\nThen execute:\r\n\r\n```shell\r\n    $ bundle && bundle exec rake\r\n```\r\n\r\n**NOTE** Make sure you have a `~/.rack/config` file in your `$HOME` directory with these properties:\r\n\r\n```text\r\n    region   = rackspace_region (e.g LON)\r\n    username = your_username\r\n    api-key  = your_api_key\r\n```\r\n\r\nIf you are already a [**Rackspace CLI**](https://developer.rackspace.com/docs/rack-cli/) user, you can skip the note above.\r\n\r\n## Usage\r\n\r\n`capistrano-rack` recipe supports two Rackspace Cloud services with configurable options:\r\n\r\n```ruby\r\n    set :rack_config, \"#{ENV['HOME']}/.rack/config\" # default\r\n    set :rack_connection_options, {}                # default\r\n    set :rack_addr_type, :private                   # default\r\n```\r\n\r\nWhere,\r\n\r\n* `rack_config`: Rackspace configuration file.\r\n* `rack_connection_options`: Optional connection parameters.\r\n* `rack_addr_type`: type of IP addresses (`:public` or `:private`).\r\n\r\n### Next Generation Cloud Servers&trade;\r\n\r\nTo deploy to your Next Gen Cloud servers:\r\n\r\n```ruby\r\n    rack_servers %w{app web}, '^myservers-'\r\n```\r\n\r\n`rack_servers()` function supports the following ordered parameters:\r\n\r\n* `roles`: your [Capistrano Roles](http://capistranorb.com/).\r\n* `regex_str`: a regular expression to filter throught your Next Gen Cloud servers.\r\n\r\n### Auto Scale\r\n\r\nTo deploy to your Scaling Group:\r\n\r\n```ruby\r\n    rack_autoscale %w{app web}, 'mygroup'\r\n```\r\n\r\n`rack_autoscale()` function supports the following ordered parameters:\r\n\r\n* `roles`: your [Capistrano Roles](http://capistranorb.com/).\r\n* `group_name`: Name of your Scaling Group.\r\n\r\n### Optional Connection Parameters\r\n\r\n<table>\r\n    <tr><th>Key</th><th>Description</th></tr>\r\n    <tr>\r\n        <td>connect_timeout</td>\r\n        <td>Connection timeout (default: 60 seconds)</td>\r\n    </tr>\r\n    <tr>\r\n        <td>read_timeout</td>\r\n        <td>Read timeout for connection (default: 60 seconds)</td>\r\n    </tr>\r\n    <tr>\r\n        <td>write_timeout</td>\r\n        <td>Write timeout for connection (default: 60 seconds)</td>\r\n    </tr>\r\n    <tr>\r\n        <td>proxy</td>\r\n        <td>Proxy for HTTP and HTTPS connections</td>\r\n    </tr>\r\n    <tr>\r\n        <td>ssl_ca_path</td>\r\n        <td>Path to SSL certificate authorities</td>\r\n    </tr>\r\n    <tr>\r\n        <td>ssl_ca_file</td>\r\n        <td>SSL certificate authority file</td>\r\n    </tr>\r\n    <tr>\r\n        <td>ssl_verify_peer</td>\r\n        <td>SSL verify peer (default: true)</td>\r\n    </tr>   \r\n</table>\r\n\r\n## Contributing\r\n\r\nBug reports, Pull requests and Stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/amrfaissal/capistrano-rack/issues/new).\r\n\r\n## License\r\n\r\nThis gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}